#!/bin/bash --login

#SBATCH --time=02:00:00      
#SBATCH --ntasks=2           
#SBATCH --cpus-per-task=20   
#SBATCH --mem=32G   
#SBATCH --job-name  strip
#SBACTH -A shade-cole-bonito

cd ${SLURM_SUBMIT_DIR}
cores="$SLURM_CPUS_PER_TASK"
RAM="$SLURM_MEM_PER_NODE"

echo -e "\n==== PCR primers ====\n"
echo -e "wSSUmCf=TATYGYTCTTNAACGAGGAATC # 5' amf forward primer"
echo -e "wLSUmBr=AACACTCGCAYAYATGYTAGA # 3' amf reverse primer"
echo -e "wLSUmBr_RC=TCTARCATRTRTGCGAGTGTT"
wSSUmCf="TATYGYTCTTNAACGAGGAATC" # amf forward primer
wLSUmBr="AACACTCGCAYAYATGYTAGA" # amf reverse primer
wLSUmBr_RC="TCTARCATRTRTGCGAGTGTT"

echo -e "\n==== Paths ====\n"
echo -e "mkdir /mnt/home/benucci/Amplicon-PacBio/stripped"
mkdir /mnt/home/benucci/Amplicon-PacBio/stripped
echo -e "cd /mnt/home/benucci/Amplicon-PacBio/data_fastq/"
cd /mnt/home/benucci/Amplicon-PacBio/data_fastq/
echo -e "\n==== Copy files ====\n"
echo -e "cp /mnt/home/benucci/Amplicon-PacBio/data_fastq/*.fastq /mnt/home/benucci/Amplicon-PacBio/stripped"
cp /mnt/home/benucci/Amplicon-PacBio/data_fastq/*.fastq /mnt/home/benucci/Amplicon-PacBio/stripped/

echo -e "\n========= Cutadapt ========\n"
# Since a first round of cutadapt shoed that these PacBio reads are 
# a mixture of forward and reverse. In a multi-plexed environment, the output
# is a single consensus sequence for each barcoded amplicon sequence on 
# a per-ZMW bases (one consensus sequence saved per-ZMW). The orientation 
# of the [barcoded] ccs reads will be both forward and reverse and are 
# amenable to PCR primer-trimming.  

conda activate cutadapt
echo -e "cutadapt version: `cutadapt --version`" 

for file in *.fastq
do cutadapt \
	-g $wSSUmCf -a $wLSUmBr_RC \
	-e 0.1 \
	--cores=$cores \
	--match-read-wildcards \
	--revcomp \
	--action lowercase \
	--discard-untrimmed \
	-o ${file//.fastq/_rc.fastq} $file
done

for file in *_rc.fastq
do cutadapt \
	-g $wSSUmCf -a $wLSUmBr_RC \
	-e 0.1 \
	--cores=$cores \
	--match-read-wildcards \
	-o ${file//.fastq/_trim.fastq} $file
done
conda deactivate

# cutadapt -n Repeat the adapter finding and removal step up to COUNT times. At least 2 if you have 2 primers.
# cutadapt -e expected error rate (default 10%).
# cutadapt --discard-untrimmed discards the pair if one of the reads does not contain an adapter
# cutadapt --match-read-wildcards All IUPAC nucleotide codes (wildcard characters in the read) are suppported. Wildcards in the adapter are allowed by default

echo -e "\n====== Read counts =====\n"
for fastq in *_trim.fastq                                                                           
do echo "$fastq\t`grep -c "^+$" $fastq`" 
done > /mnt/home/benucci/Amplicon-PacBio/stats/stripped.counts
sed -i '1i Name\tCounts' /mnt/home/benucci/Amplicon-PacBio//stats/stripped.counts
cat /mnt/home/benucci/Amplicon-PacBio/stats/stripped.counts >> /mnt/home/benucci/Amplicon-PacBio/stats/readCounts.txt

echo -e "\n====== Sbatch log ========\n"
scontrol show job $SLURM_JOB_ID 

scriptname=$(basename "$0")
cp /mnt/home/benucci/Amplicon-PacBio/pipeline/slurm* \
/mnt/home/benucci/Amplicon-PacBio/stats/$scriptname.slurm
rm /mnt/home/benucci/Amplicon-PacBio/pipeline/slurm*

